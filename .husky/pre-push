#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

if [ "$CI" = "true" ]; then
  echo "CI environment detected. Skipping pre-push hook."
  exit 0
fi
# File Extensions for which to run tests
EXTENSIONS_REGEX="\.(js|jsx|ts|tsx|json|css|scss|mjs)$"

CHANGED_FILES=""

while read local_ref local_sha remote_ref remote_sha; do
  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
    RANGE="$local_sha"
  else
    RANGE="$remote_sha..$local_sha"
  fi
  echo "Checking commit range: $RANGE"

  CHANGED_FILES="$CHANGED_FILES
$(git diff --name-only "$RANGE")"
done

# Check if any changed file matches the specified extensions
if echo "$CHANGED_FILES" | grep -E "$EXTENSIONS_REGEX" > /dev/null; then
  echo "Detected changes in files matching $EXTENSIONS_REGEX. Running tests..."

  # Clear port 3000 if already in use
  if lsof -i :3000 | grep LISTEN > /dev/null; then
    if [ "$(uname)" = "Darwin" ]; then
      osascript -e 'display notification "An app running on Port 3000 was terminated to allow tests to run!" with title "Pre-Push Hook Error" sound name "Morse"'
    else
      echo "Non-macOS system detected. No notification will be shown."
    fi
      kill -9 $(lsof -ti:3000)
  fi

  if yarn test:parallel; then
    echo "Tests passed."
    # Check if running on macOS for notifications
    if [ "$(uname)" = "Darwin" ]; then
      osascript -e 'display notification "Pushing changes now" with title "Pre-Push Hook Success" sound name "Frog"'

      if [ "$CI" = "false" ]; then
        echo "Terminating production process..."
        # Terminate production process that is running in the background
        kill -9 $(lsof -ti:3000)
        exit 0
      fi
    else
      echo "Non-macOS system detected. Skipping notification."
    fi
  else
    if [ "$(uname)" = "Darwin" ]; then
      osascript -e 'display notification "Tests failed, Aborting Push" with title "Pre-Push hook Failure" sound name "Submarine"'
    else
      echo "Non-macOS system detected. Skipping notification."
    fi
    echo "Tests failed. Aborting push."
    exit 1
  fi
else
  echo "No changes in files with the specified extensions. Skipping tests."
fi

exit 0
