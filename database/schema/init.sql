-- MySQL Script generated by MySQL Workbench
-- Sun Jun 15 12:06:44 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema KnowledgeCheckr-DB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `KnowledgeCheckr-DB` ;

-- -----------------------------------------------------
-- Schema KnowledgeCheckr-DB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `KnowledgeCheckr-DB` DEFAULT CHARACTER SET utf8 ;
USE `KnowledgeCheckr-DB` ;

-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`User` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`User` (
  `id` VARCHAR(36) NOT NULL,
  `name` TINYTEXT NOT NULL,
  `email` TINYTEXT NOT NULL,
  `emailVerified` TINYINT NOT NULL,
  `image` VARCHAR(512) NULL,
  `createdAt` DATETIME NOT NULL,
  `updatedAt` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Session` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Session` (
  `id` VARCHAR(36) NOT NULL,
  `token` TINYTEXT NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `updatedAt` DATETIME NOT NULL,
  `expiresAt` DATETIME NOT NULL,
  `ipAddress` TINYTEXT NULL,
  `userAgent` TINYTEXT NULL,
  `user_id` VARCHAR(36) NOT NULL,
  INDEX `fk_session_user_idx` (`user_id` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_session_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `KnowledgeCheckr-DB`.`User` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Account` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Account` (
  `id` VARCHAR(36) NOT NULL,
  `accountId` TINYTEXT NOT NULL,
  `providerId` TINYTEXT NOT NULL,
  `user_id` VARCHAR(36) NOT NULL,
  `accessToken` TINYTEXT NULL,
  `refreshToken` TINYTEXT NULL,
  `idToken` MEDIUMTEXT NULL,
  `accessTokenExpiresAt` DATETIME NULL,
  `refreshTokenExpiresAt` DATETIME NULL,
  `scope` TINYTEXT NULL,
  `password` TINYTEXT NULL,
  `createdAt` DATETIME NOT NULL,
  `updatedAt` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_account_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_account_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `KnowledgeCheckr-DB`.`User` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Verification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Verification` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Verification` (
  `id` VARCHAR(36) NOT NULL,
  `identifier` TINYTEXT NOT NULL,
  `value` VARCHAR(1024) NOT NULL,
  `expiresAt` DATETIME NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `updatedAt` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`KnowledgeCheck`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`KnowledgeCheck` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`KnowledgeCheck` (
  `id` VARCHAR(36) NOT NULL,
  `name` TINYTEXT NOT NULL,
  `description` MEDIUMTEXT NULL,
  `owner_id` VARCHAR(36) NOT NULL,
  `public_token` TINYTEXT NULL,
  `openDate` DATETIME NOT NULL,
  `closeDate` DATETIME NULL,
  `difficulty` INT NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `updatedAt` DATETIME NOT NULL,
  `expiresAt` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_KnowledgeCheck_user1_idx` (`owner_id` ASC) VISIBLE,
  CONSTRAINT `fk_KnowledgeCheck_user1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `KnowledgeCheckr-DB`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`User_contributesTo_KnowledgeCheck`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`User_contributesTo_KnowledgeCheck` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`User_contributesTo_KnowledgeCheck` (
  `user_id` VARCHAR(36) NOT NULL,
  `knowledgecheck_id` VARCHAR(36) NOT NULL,
  PRIMARY KEY (`user_id`, `knowledgecheck_id`),
  INDEX `fk_user_has_KnowledgeCheck_KnowledgeCheck1_idx` (`knowledgecheck_id` ASC) VISIBLE,
  INDEX `fk_user_has_KnowledgeCheck_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_KnowledgeCheck_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `KnowledgeCheckr-DB`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_has_KnowledgeCheck_KnowledgeCheck1`
    FOREIGN KEY (`knowledgecheck_id`)
    REFERENCES `KnowledgeCheckr-DB`.`KnowledgeCheck` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Category` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Category` (
  `id` VARCHAR(36) NOT NULL,
  `name` TINYTEXT NOT NULL,
  `prequisite_category_id` VARCHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Category_Category1_idx` (`prequisite_category_id` ASC) VISIBLE,
  CONSTRAINT `fk_Category_Category1`
    FOREIGN KEY (`prequisite_category_id`)
    REFERENCES `KnowledgeCheckr-DB`.`Category` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Question`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Question` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Question` (
  `id` VARCHAR(36) NOT NULL,
  `type` ENUM('single-choice', 'multiple-choice', 'open-question', 'drag-drop') NOT NULL,
  `question` MEDIUMTEXT NOT NULL,
  `points` INT NOT NULL,
  `category_id` VARCHAR(36) NOT NULL,
  `knowledgecheck_id` VARCHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Question_Category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_Question_KnowledgeCheck1_idx` (`knowledgecheck_id` ASC) VISIBLE,
  CONSTRAINT `fk_Question_Category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `KnowledgeCheckr-DB`.`Category` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Question_KnowledgeCheck1`
    FOREIGN KEY (`knowledgecheck_id`)
    REFERENCES `KnowledgeCheckr-DB`.`KnowledgeCheck` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`Answer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`Answer` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`Answer` (
  `id` VARCHAR(36) NOT NULL,
  `answer` MEDIUMTEXT NOT NULL,
  `correct` TINYINT NULL,
  `position` INT NULL,
  `Question_id` VARCHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Answer_Question1_idx` (`Question_id` ASC) VISIBLE,
  CONSTRAINT `fk_Answer_Question1`
    FOREIGN KEY (`Question_id`)
    REFERENCES `KnowledgeCheckr-DB`.`Question` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`KnowledgeCheck_Settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`KnowledgeCheck_Settings` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`KnowledgeCheck_Settings` (
  `id` VARCHAR(36) NOT NULL,
  `knowledgecheck_id` VARCHAR(36) NOT NULL,
  `allow_anonymous` TINYINT NULL DEFAULT 1,
  `randomize_questions` TINYINT NULL DEFAULT 1,
  `allow_free_navigation` TINYINT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_KnowledgeCheck_Settings_KnowledgeCheck1_idx` (`knowledgecheck_id` ASC) VISIBLE,
  CONSTRAINT `fk_KnowledgeCheck_Settings_KnowledgeCheck1`
    FOREIGN KEY (`knowledgecheck_id`)
    REFERENCES `KnowledgeCheckr-DB`.`KnowledgeCheck` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KnowledgeCheckr-DB`.`User_has_done_KnowledgeCheck`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KnowledgeCheckr-DB`.`User_has_done_KnowledgeCheck` ;

CREATE TABLE IF NOT EXISTS `KnowledgeCheckr-DB`.`User_has_done_KnowledgeCheck` (
  `user_id` VARCHAR(36) NOT NULL,
  `knowledgeCheck_id` VARCHAR(36) NOT NULL,
  `startedAt` DATETIME NOT NULL,
  `finishedAt` DATETIME NOT NULL,
  `score` INT NOT NULL,
  PRIMARY KEY (`user_id`, `knowledgeCheck_id`),
  INDEX `fk_user_has_KnowledgeCheck_KnowledgeCheck2_idx` (`knowledgeCheck_id` ASC) VISIBLE,
  INDEX `fk_user_has_KnowledgeCheck_user2_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_KnowledgeCheck_user2`
    FOREIGN KEY (`user_id`)
    REFERENCES `KnowledgeCheckr-DB`.`User` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_KnowledgeCheck_KnowledgeCheck2`
    FOREIGN KEY (`knowledgeCheck_id`)
    REFERENCES `KnowledgeCheckr-DB`.`KnowledgeCheck` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `KnowledgeCheckr-DB`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `KnowledgeCheckr-DB`;
INSERT INTO `KnowledgeCheckr-DB`.`User` (`id`, `name`, `email`, `emailVerified`, `image`, `createdAt`, `updatedAt`) VALUES ('1WUOGaKXsF9GNsGFGpY6kjCplTcGm97H', 'testuser', 'test@email.com', 0, NULL, '2025-05-11 08:12:02', '2025-05-11 08:12:02');

COMMIT;


-- -----------------------------------------------------
-- Data for table `KnowledgeCheckr-DB`.`Account`
-- -----------------------------------------------------
START TRANSACTION;
USE `KnowledgeCheckr-DB`;
INSERT INTO `KnowledgeCheckr-DB`.`Account` (`id`, `accountId`, `providerId`, `user_id`, `accessToken`, `refreshToken`, `idToken`, `accessTokenExpiresAt`, `refreshTokenExpiresAt`, `scope`, `password`, `createdAt`, `updatedAt`) VALUES ('gQ3yS2oCC4LOVw43bbeN2AVuwIArh0GR', '1WUOGaKXsF9GNsGFGpY6kjCplTcGm97H', 'credential', '1WUOGaKXsF9GNsGFGpY6kjCplTcGm97H', NULL, NULL, NULL, NULL, NULL, NULL, '079e6c442380c05ee6ed14acb250e192:ee6044fc470e118c23157b267b8341e2ec3f1cdf0f9b05aaaf7d8ae9fcbcad2e44204b224677811f7c7d00a4f3e6065df3bca719419a726a36e5441319878d8c', '2025-05-11 08:12:03', '2025-05-11 08:12:03');

COMMIT;


-- -----------------------------------------------------
-- Data for table `KnowledgeCheckr-DB`.`Category`
-- -----------------------------------------------------
START TRANSACTION;
USE `KnowledgeCheckr-DB`;
INSERT INTO `KnowledgeCheckr-DB`.`Category` (`id`, `name`, `prequisite_category_id`) VALUES ('628b11df-c906-421c-af25-f48e743adf2b', 'general', NULL);

COMMIT;

