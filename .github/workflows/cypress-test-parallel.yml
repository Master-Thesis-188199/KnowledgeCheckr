name: Cypress E2E Parallel

on:
  push:

env:
  APP_NAME: ${{ github.event.repository.name }}

  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: root
  DATABASE_PASSWORD: 123

  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID}}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}

  AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
  AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}

jobs:
  setup:
    name: Setup Test Chunks
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps.set-test-chunks.outputs.test-chunks }}
    steps:
      - uses: actions/checkout@v3
      - id: set-test-chunks
        name: Set Chunks
        shell: bash
        # get all spec files from the e2e directory, group them to be at most 3 at a time and transform them to json
        run: |
          echo "test-chunks=$(
            find cypress/e2e -type f -name '*.cy.tsx' \
              | xargs -n3 \
              | while read -r group; do
                  # full, comma-separated paths (for spec:)
                  paths=$(echo "$group" | tr ' ' ',')
                  # strip prefix/suffix AND swap commas for " + "
                  short=$(echo "$paths" \
                    | sed -E 's#cypress/e2e/##g; s#\.cy\.tsx##g; s#,# + #g')
                  jq -n --arg paths "$paths" --arg short "$short" \
                    '{paths: $paths, short: $short}'
                done \
              | jq -s -c
          )" >> $GITHUB_OUTPUT

  run-cypress-tests:
    needs: setup

    services:
      mysql:
        image: ghcr.io/master-thesis-188199/knowledgecheckr-database:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DATABASE_NAME }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    name: ${{ matrix.chunk.short }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunks']) }}

    timeout-minutes: 15
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Set up Node 23.7
        uses: actions/setup-node@v3
        with:
          node-version: 23.7

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb
          version: 1.0

      - name: Cache node_modules + Cypress Cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{hashFiles('yarn.lock')}}
          restore-keys: node_modules-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Create Cypress Environment File
        run: |
          echo '{  
            "GOOGLE_USERNAME": "${{ secrets.TEST_GOOGLE_USERNAME }}",  
            "GOOGLE_PASSWORD": "${{ secrets.TEST_GOOGLE_PASSWORD }}",  
            "NEXT_PUBLIC_BASE_URL": "${{ env.NEXT_PUBLIC_BASE_URL }}", 
            "SkipOnCi": true 
          }' > cypress.env.json

      - name: Unique Cache-Key
        shell: bash
        run: |
          raw="${{ matrix.chunk }}"

          # 1) strip commas
          key="${raw//,/}"

          # 2) optional: lowercase for consistency
          key="${key,,}"

          # Export the final cache key
          echo "cache-key=${{ github.job }}-$key" >> $GITHUB_ENV

      - name: Cypress run 🧪
        uses: cypress-io/github-action@v3
        with:
          start: npm run pretest
          wait-on: 'npx wait-on --timeout 120000 ${{ env.NEXT_PUBLIC_BASE_URL }}'
          wait-on-timeout: 120

          browser: chrome
          install: false
          spec: ${{ matrix.chunk.paths }}
