name: (PR) Run E2E in Parallel

on:
  pull_request:

env:
  APP_NAME: ${{ github.event.repository.name }}

  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

  DATABASE_HOST: ${{ secrets.DATABASE_HOST}}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: root
  DATABASE_PASSWORD: 123

  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID}}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}

  AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
  AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}

jobs:
  setup:
    name: (PR) Setup 🔧
    runs-on: ubuntu-latest
    outputs:
      # will contain a json string with an array of n elements, each being a string of spec files delimited by ,
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
    steps:
      - uses: actions/checkout@v3
      - id: set-test-chunks
        name: Set Chunks
        # get all spec files from the e2e directory, group them to be at most 3 at a time and transform them to json
        # this will output something like ["cypress/integration/test1.spec.ts, cypress/integration/test2.spec.ts, cypress/integration/test3.spec.ts", "cypress/integration/test4.spec.ts,etc.."]
        run: echo "test-chunks=$(find cypress/e2e -type f -name "*.cy.tsx" | xargs -n3 | tr ' ' ',' | jq -R . | jq -s -cM .)" >> $GITHUB_OUTPUT

  run-cypress-tests:
    needs: setup

    services:
      mysql:
        image: ghcr.io/master-thesis-188199/knowledgecheckr-database:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DATABASE_NAME }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    name: (PR) Running Specs 🧑‍💻 - ${{ matrix.chunk }}
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001

    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunks']) }}

    timeout-minutes: 45
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Set up Node 23.7
        uses: actions/setup-node@v3
        with:
          node-version: 23.7

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb
          version: 1.0

      - name: Cypress run
        run: yarn install --frozen-lockfile

      - name: Create Cypress Environment File
        run: |
          echo '{  
            "GOOGLE_USERNAME": "${{ secrets.TEST_GOOGLE_USERNAME }}",  
            "GOOGLE_PASSWORD": "${{ secrets.TEST_GOOGLE_PASSWORD }}",  
            "NEXT_PUBLIC_BASE_URL": "${{ env.NEXT_PUBLIC_BASE_URL }}", 
            "SkipOnCi": true 
          }' > cypress.env.json

      - name: Unique Cache-Key
        shell: bash
        run: |
          raw="${{ matrix.chunk }}"

          # 1) strip commas
          key="${raw//,/}"

          # 2) optional: lowercase for consistency
          key="${key,,}"

          # Export the final cache key
          echo "cache-key=${{ github.job }}-$key" >> $GITHUB_ENV

      - name: Start Application
        run: npm run pretest

      - name: Wait for App to start
        run: npm run wait-on

      #  run all Cypress tests
      - name: Cypress run 🧪
        uses: cypress-io/github-action@v3
        if: github.event_name == 'pull_request'
        with:
          # --spec here will just contain a string with multiple spec files returned by the split logic from the setup job
          browser: chrome
          cache-key: ${{ env.cache-key }}
          install: false
          spec: ${{ matrix.chunk }}
