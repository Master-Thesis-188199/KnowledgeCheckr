name: Build and Test

on: push

env:
  BASE_URL: ${{ secrets.BASE_URL }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

  DATABASE_HOST: ${{ secrets.DATABASE_HOST}}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: root
  DATABASE_PASSWORD: 123

  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID}}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}

  AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
  AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}

jobs:
  check-file-changes:
    runs-on: ubuntu-latest
    outputs:
      relevant: ${{ steps.check.outputs.relevant }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for relevant changes
        id: check
        uses: ./.github/actions/check-changed-files
        with:
          base: ${{ github.event.before }}

  run-tests:
    needs: check-file-changes
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DATABASE_NAME }}
        options: >-
          --volume ${{ github.workspace }}/database/schema/init.sql:/docker-entrypoint-initdb.d/init-database.sql
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Skip Tests when nothing changed
        if: needs.check-file-changes.outputs.relevant == 'false'
        run: echo "Skipping test execution because no relevant files were modified by the last commit / pushed commits"

      - name: Set up Node 23.7
        if: needs.check-file-changes.outputs.relevant == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 23.7

      - name: Install Cypress Dependencies
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: |
          sudo apt-get update  
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb

      - name: Create Cypress Environment File
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: |
          echo '{  
            "GOOGLE_USERNAME": "${{ secrets.TEST_GOOGLE_USERNAME }}",  
            "GOOGLE_PASSWORD": "${{ secrets.TEST_GOOGLE_PASSWORD }}",  
            "BASE_URL": "${{ env.BASE_URL }}", 
            "SkipOnCi": true 
          }' > cypress.env.json

      - name: Install Dependencies
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: yarn install --frozen-lockfile

      - name: Cache Nextjs Build Cache
        if: needs.check-file-changes.outputs.relevant == 'true'
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package.json') }}-

      - name: Run Test Script
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: check-file-changes

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DATABASE_NAME }}
        options: >-
          --volume ${{ github.workspace }}/database/schema/init.sql:/docker-entrypoint-initdb.d/init-database.sql
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Skip Build when nothing changed
        if: needs.check-file-changes.outputs.relevant == 'false'
        run: echo "Skipping build execution because no relevant files were modified by the last commit / pushed commits"

      - name: Set up Node 23.7
        if: needs.check-file-changes.outputs.relevant == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 23.7

      - name: Install dependencies
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: yarn install --frozen-lockfile

      - name: Run Linting
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: npm run lint

      - name: Run Build-Script
        if: needs.check-file-changes.outputs.relevant == 'true'
        run: npm run build

  Skip-Executions:
    needs: check-file-changes
    if: needs.check-file-changes.outputs.relevant == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Skip Build And Test
        run: echo "Skipping build and test execution because no relevant files were modified by the last commit / pushed commits"
