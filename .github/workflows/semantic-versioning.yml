name: Automatic Semantic Versioning

on:
  push:
    branches:
      - main
      - canary
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO_NAME: ${{ github.repository }}

jobs:
  semantic-versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node 23.7
        uses: actions/setup-node@v3
        with:
          node-version: 23.7

      - name: Install dependencies
        run: yarn

      - name: Run semantice release
        run: |
          npm run semantic-release


  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: [semantic-versioning]


    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create BuildKit Configuration
        run: |
          echo "[worker.oci]
            max-parallelism = 1" > buildkitd.toml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: linux/amd64,linux/arm64
          buildkitd-config : buildkitd.toml

      - name: Set lowercase repository name as environment variable
        run: echo "LOWER_REPO_NAME=$(echo ${{ env.REPO_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Check if image with previous tag already exists
        id: check-image
        run: |
          IMAGE="ghcr.io/${{ env.LOWER_REPO_NAME }}:${{ steps.previoustag.outputs.tag }}"
          echo "Checking if image $IMAGE exists..."
          if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
            echo "Image exists. Skipping build and push."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Image does not exist. Proceeding with build and push."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Multi-Platform Image
        if: steps.check-image.outputs.exists == 'false'
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/${{ env.LOWER_REPO_NAME }}:latest \
            -t ghcr.io/${{ env.LOWER_REPO_NAME }}:${{ steps.previoustag.outputs.tag }} \
            --push .
